plugins {
    id 'com.github.johnrengelman.shadow'
}

apply from: "$buildScriptsDir/common-java.gradle"
apply from: "$buildScriptsDir/publishing.gradle"

repositories {
    mavenLocal()
}

configurations {
    shadowInclude
}

processResources {

    dependsOn ':agent-ot:instrumentation:shadowJar'

    from(zipTree(tasks.getByPath(':agent-ot:instrumentation:shadowJar').archivePath)) {
        into 'agent-tooling-and-instrumentation.isolated'
        rename '(^.*)\\.class$', '$1.classdata'
        // Rename LICENSE file since it clashes with license dir on non-case sensitive FSs (i.e. Mac)
        rename '^LICENSE$', 'LICENSE.renamed'
    }
}

jar {
    manifest {
        attributes(
                "Main-Class": "io.opentelemetry.auto.bootstrap.AgentBootstrap",
                "Agent-Class": "io.opentelemetry.auto.bootstrap.AgentBootstrap",
                "Premain-Class": "io.opentelemetry.auto.bootstrap.AgentBootstrap",
                "Can-Redefine-Classes": true,
                "Can-Retransform-Classes": true,
        )
    }
    dependsOn shadowJar
    enabled = false
}

shadowJar {
    configurations = [project.configurations.shadowInclude]

    archiveClassifier = ''

    mergeServiceFiles()

    exclude '**/module-info.class'

    // Prevents conflict with other SLF4J instances. Important for premain.
    relocate 'org.slf4j', 'io.opentelemetry.auto.slf4j'
    // rewrite dependencies calling Logger.getLogger
    relocate 'java.util.logging.Logger', 'io.opentelemetry.auto.bootstrap.PatchLogger'

    // relocate OpenTelemetry API
    relocate "io.opentelemetry.OpenTelemetry", "io.opentelemetry.auto.shaded.io.opentelemetry.OpenTelemetry"
    relocate "io.opentelemetry.context", "io.opentelemetry.auto.shaded.io.opentelemetry.context"
    relocate "io.opentelemetry.distributedcontext", "io.opentelemetry.auto.shaded.io.opentelemetry.distributedcontext"
    relocate "io.opentelemetry.internal", "io.opentelemetry.auto.shaded.io.opentelemetry.internal"
    relocate "io.opentelemetry.metrics", "io.opentelemetry.auto.shaded.io.opentelemetry.metrics"
    relocate "io.opentelemetry.trace", "io.opentelemetry.auto.shaded.io.opentelemetry.trace"

    // relocate OpenTelemetry API dependency
    relocate "io.grpc", "io.opentelemetry.auto.shaded.io.grpc"
}

archivesBaseName = 'applicationinsights-agent-ot'

dependencies {
    shadowInclude project(path: ':agent-ot:agent-bootstrap')
}

// region Publishing properties

projectPomName = project.msftAppInsights + " Codeless Java Agent"
projectPomDescription = "This is the Codeless Java agent of " + project.msftAppInsightsJavaSdk

whenPomConfigured = { p ->
    p.dependencies = []
}

// endregion Publishing properties
